import streamlit as st
import pandas as pd
import os
import requests

# LINE Notify Token (Replace with your actual token)
LINE_NOTIFY_TOKEN = "gF2wiELf5fMoOnRdTMud8dJ0xpMrh3mo7oPevPifUVB"

def send_line_notification(message):
    """Send order notification to LINE Notify."""
    url = "https://notify-api.line.me/api/notify"
    headers = {"Authorization": f"Bearer {LINE_NOTIFY_TOKEN}"}
    data = {"message": message}
    requests.post(url, headers=headers, data=data)

# Streamlit App Title
st.title("‚ú® Sugar Shade")
st.subheader("‡πÄ‡∏Ñ‡πâ‡∏Å‡∏õ‡∏≠‡∏ô‡∏î‡πå")

# Customer Details
customer_name = st.text_input("üíå‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠ Line")
phone_number = st.text_input("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå", max_chars=15, placeholder=" XXX-XXX-XXXX")

# Cake Selection
cake_base = st.selectbox("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å:", ["‡∏ß‡∏≤‡∏ô‡∏¥‡∏•‡∏•‡∏≤", "‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï"])
cake_filling = st.selectbox("‡πÑ‡∏™‡πâ:", [" üçì‡∏™‡∏ï‡∏£‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", " üç´‡∏ä‡πá‡∏≠‡∏Ñ‡πÇ‡∏Å‡πÅ‡∏•‡∏ï", " ü´ê‡∏ö‡∏•‡∏π‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏£‡∏µ‡πà", " üçØ‡∏Ñ‡∏≤‡∏£‡∏≤‡πÄ‡∏°‡∏•"])
cake_size = st.selectbox("‡∏Ç‡∏ô‡∏≤‡∏î:", ["0.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå", "1 ‡∏õ‡∏≠‡∏ô‡∏î‡πå", "1.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå"])

# Cake Color Selection
cake_color_options = ["ü©∑‡∏ä‡∏°‡∏û‡∏π", "ü©µ‡∏ü‡πâ‡∏≤", "ü§ç‡∏Ç‡∏≤‡∏ß", "üñ§‡∏î‡∏≥", "üíú‡∏°‡πà‡∏ß‡∏á", "‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏"]
cake_color_choice = st.selectbox("‡∏™‡∏µ‡πÄ‡∏Ñ‡πâ‡∏Å:", cake_color_options)

if cake_color_choice == "‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏":
    custom_cake_color = st.text_input("‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
    cake_color = custom_cake_color if custom_cake_color else "Not Specified"
else:
    cake_color = cake_color_choice

cake_text = st.text_input("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ô‡πÄ‡∏Ñ‡πâ‡∏Å/‡∏ê‡∏≤‡∏ô", placeholder="‡πÄ‡∏ä‡πà‡∏ô Happy birthday!")
cake_specification = st.text_input("‡∏ö‡∏£‡∏µ‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡πÜ(‡∏´‡∏≤‡∏Å‡∏°‡∏µ)", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡πÇ‡∏ö‡∏ß‡πå‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏î‡∏≥")

# Selecting candle
candle_type = st.radio("‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô(‡πÅ‡∏ó‡πà‡∏á‡∏•‡∏∞ 10‡∏ö‡∏≤‡∏ó):", ["‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß", "‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏™‡∏±‡πâ‡∏ô‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π", "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô"])

if candle_type == "‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß":
    num_candles = st.slider("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÅ‡∏ó‡πà‡∏á):", min_value=1, max_value=10, value=1)
elif candle_type == "‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏™‡∏±‡πâ‡∏ô‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π":
    num_candles = st.slider("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡πÅ‡∏ó‡πà‡∏á):", min_value=1, max_value=10, value=1)
else:
    num_candles = 0
    st.write("‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô")

# Delivery details
delivery_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å")
delivery_time = st.time_input("‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å (‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏ß‡∏£‡πå‡πÉ‡∏™‡πà 09.00 ‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å‡∏à‡∏∞‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ü‡∏¥‡∏£‡πå‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)")
delivery_option = st.radio("‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πà‡∏á:", ["‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á", "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå","‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"])

if delivery_option == "‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå":
    st.warning(
        "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡πâ‡∏Å‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞\n"
        "\n"
        "‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡πâ‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å lalamove / bolt / grab\n"
        "\n"
        "‚ùå ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå\n"
        "1. ‡πÄ‡∏Ñ‡πâ‡∏Å 1.5 ‡∏õ‡∏≠‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ\n"
        "2. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏Å‡∏°.\n"
        "3. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô 3D ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á\n"
        "4. ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡πÑ‡∏°‡πâ\n" 
        "\n"
        "‚õîÔ∏è ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏∞üôèüèª"
    )
delivery_location = st.text_input("‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á (‡∏´‡∏≤‡∏Å‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà)", placeholder="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πá‡∏ô google link ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ")

# File to store orders
ORDER_FILE = "sugarshade_orders.csv"

# Order Placement
if st.button("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"):
    if not customer_name or not phone_number or not delivery_location:
        st.error("‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö (‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå , and ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á).")
    else:
        order_data = {
            "Customer Name": [customer_name],
            "Phone Number": [phone_number],
            "Cake Base": [cake_base],
            "Cake Filling": [cake_filling],
            "Cake Size": [cake_size],
            "Cake Color": [cake_color],
            "Cake Text": [cake_text],
            "Cake Specification": [cake_specification],
            "Candle Type": [candle_type],
            "Delivery Date": [delivery_date],
            "Delivery Time": [delivery_time],
            "Deliver Option" : [delivery_option],
            "Delivery Location": [delivery_location],
        }

        df = pd.DataFrame(order_data)

        try:
            if os.path.exists(ORDER_FILE):
                df.to_csv(ORDER_FILE, mode="a", index=False, header=False)
            else:
                df.to_csv(ORDER_FILE, mode="w", index=False, header=True)

            st.success("‚úÖ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß")

            # Generate Order Summary
            order_summary = f"""
            **üíåK.{customer_name}**
            - **‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:** {phone_number}

            **üéÇ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Ñ‡πâ‡∏Å**
            - **‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å:** {cake_base}
            - **‡πÑ‡∏™‡πâ:** {cake_filling}
            - **‡∏Ç‡∏ô‡∏≤‡∏î:** {cake_size}
            - **‡∏™‡∏µ‡πÄ‡∏Ñ‡πâ‡∏Å:** {cake_color}
            - **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:** {cake_text}
            - **‡∏ö‡∏£‡∏µ‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡πÜ:** {cake_specification}

            **üïØÔ∏è‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô**
            - **‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô:** {candle_type} {num_candles} **‡πÅ‡∏ó‡πà‡∏á**

            **üöó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á**
            - **‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å:** {delivery_date}
            - **‡πÄ‡∏ß‡∏•‡∏≤:** {delivery_time}
            - **‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:** {delivery_option}
            - **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö:** {delivery_location}
            """

            # Generate Order Summary for LINE
            order_summaryforLINE = f"""
 üíåK.{customer_name}
 ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {phone_number}

üéÇ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏Ñ‡πâ‡∏Å
    -‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å: {cake_base}
    -‡πÑ‡∏™‡πâ: {cake_filling}
    -‡∏Ç‡∏ô‡∏≤‡∏î:{cake_size}
    -‡∏™‡∏µ‡πÄ‡∏Ñ‡πâ‡∏Å: {cake_color}
    -‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {cake_text}
    -‡∏ö‡∏£‡∏µ‡∏ü‡∏≠‡∏∑‡πà‡∏ô‡πÜ: {cake_specification}

üïØÔ∏è‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô
    -‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô: {candle_type} {num_candles} **‡πÅ‡∏ó‡πà‡∏á**

üöó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á**
    -‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å:{delivery_date}
    -‡πÄ‡∏ß‡∏•‡∏≤: {delivery_time}
    -‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: {delivery_option}
    -‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö: {delivery_location}
            """

            # Send order notification to LINE
            send_line_notification(order_summaryforLINE)

            # Show Order Summary Immediately
            st.subheader("üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")
            st.write(order_summary)

        except Exception as e:
            st.error(f"‚ö†Ô∏è Error saving order: {e}")

# Admin Section (Hidden from customers)
st.divider()
st.subheader("üîí Admin Access")
st.text("‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

admin_password = st.text_input("Enter Admin Password", type="password")

if admin_password == "PurseAdmin":  # Change this password!
    if st.button("View Orders"):
        try:
            orders_df = pd.read_csv(ORDER_FILE)
            st.write(orders_df)
        except FileNotFoundError:
            st.error("No orders found yet.")
else:
    st.warning("üîê Enter the admin password to view orders.")